name: Auto PR and Merge (File Sync)

on:
  create:
    branches:
      - "file-sync"
  push:
    branches:
      - "file-sync"

permissions:
  pull-requests: write
  contents: write
  checks: write
  issues: read

jobs:
  create-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Exit if no changes
        run: |
          if [ -z "$(git diff --name-only HEAD~1 HEAD)" ]; then
            echo "No changes to make PR"
            exit 0
          fi

      - name: Get PR body
        id: get-pr-body
        run: |
          PR_BODY=$(bash .github/scripts/make-pr-body.sh ${{ github.ref_name }})
          echo "pr_body<<EOF" >> $GITHUB_OUTPUT
          echo "$PR_BODY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create Pull Request
        id: create-pr
        run: |
          # Try to create PR, ignore error if PR already exists
          PR_LINK=$(gh pr create \
            --title "chore: Sync common files from `repository-utils`" \
            --body "${{ steps.get-pr-body.outputs.pr_body }}" \
            --base main \
            --head "${{ github.ref_name }}" \
            --assignee "${{ github.actor }}" \
            --label "chore" 2>/dev/null || true)

          # If PR creation failed (likely because it exists), get the existing PR
          if [ -z "$PR_LINK" ]; then
            PR_LINK=$(gh pr view "${{ github.ref_name }}" --json url --jq '.url' 2>/dev/null || true)
          fi

          if [ ! -z "$PR_LINK" ]; then
            echo "pull-request-link=$PR_LINK" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable Auto-merge
        if: steps.create-pr.outputs.pull-request-link
        run: |
          gh pr merge ${{ steps.create-pr.outputs.pull-request-link }} --auto --squash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
